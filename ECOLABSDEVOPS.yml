trigger:
  batch: "true"
  branches:
    include:
      - master
      - devsandbox
      - devSandbox1
      - devSandbox2
      
pr:
  branches:
    include:
      - master
      - devsandbox
      - devSandbox1      

variables:
- name: one
  value: initialValue 

jobs:
- job: ProdDeploy
  timeoutInMinutes: 10
  condition:  eq(variables['Build.SourceBranch'], 'refs/heads/master')
  continueOnError: true
  steps:
    - task: UseNode@1
    - bash: 
        #npm install   --global  sfdx-cli@7.45.1
        npm install  --global sfdx-cli@7.45.1
      displayName: Install Salesforce CLI
    - bash: 
        sfdx force:auth:jwt:grant --clientid $(salesforceProdClientid) --jwtkeyfile ./server2.key --username $(salesforceProdUsername) --instanceurl $(salesforceProdInstanceUrl) -a prod
      displayName: Authorize salesforce org
    - bash: 
        sfdx force:source:deploy  -p ./force-app -u prod
      displayName: Deploying Extra Metadata to the Org
    - bash: 
        echo $(sfdx force:source:deploy:report -u prod)
        deploy =  $(sfdx force:source:deploy:report -u prod)
        echo ${deploy}
      displayName: Deployment Report  
    - script: | 
        echo ${{ variables.one }} # outputs initialValue
        echo $(one)
        # echo $(sfdx force:source:deploy:report -u prod)
        # deploy =  $(sfdx force:source:deploy:report -u prod)
        # echo 'printed data---->' $(deploy) '--end-1-'
        # echo 'printed data---->' '--end-2-'
        sfdx force:data:record:create -u prod -s Deployment_Error_Log__c -v "Name='$(sfdx force:source:deploy:report -u prod)'"
      displayName: Creating Deployment Debug Log record
      condition: always()  

    - bash: echo '##vso[task.setvariable variable=one]$(sfdx force:source:deploy:report -u prod)'
      displayName: Set new variable value
      condition: always()
    - script: |
        MAJOR_RUN=$(echo $one | cut -d '.' -f1)
        echo "This is the major run number: $MAJOR_RUN"
        echo "##vso[task.setvariable variable=major]$MAJOR_RUN"
        echo "My pipeline variable for major run is $(major)"
        echo ${{ variables.one }} # outputs initialValue
        echo 'output---->' $(one) # outputs secondValue
        echo 'output---->' $(one:1:5) # outputs secondValue
        x=`echo "$(sfdx force:source:deploy:report -u prod)" | head -c 7`; echo "##vso[task.setvariable variable=one]$x"
        echo "$(one)"
      displayName: Second variable pass  
      condition: always()


- job: devsandboxProdDeploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/devsandbox'))
  steps:
    - task: UseNode@1
    - bash: 
        npm install  --global sfdx-cli@7.45.1
      displayName: Install Salesforce CLI
    - bash: 
        sfdx force:auth:jwt:grant --clientid $(devsandboxkey) --jwtkeyfile ./server.key --username $(devsandboxus) --instanceurl $(salesforceProdInstanceUrl) -a prod
      displayName: Authorize salesforce org
    - bash: 
        sfdx force:source:deploy -l RunLocalTests -p ./force-app -u prod -w 10
      displayName: Deploying Extra Metadata to the Org

- job: devsandbox11Deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/devSandbox1'))
  steps:
    - task: UseNode@1
    - bash: 
        npm install  --global sfdx-cli@7.45.1
      displayName: Install Salesforce CLI
    - bash: 
        sfdx force:auth:jwt:grant --clientid $(devsandbox1key) --jwtkeyfile ./server.key --username $(devsandbox1us) --instanceurl $(salesforceProdInstanceUrl) -a prod
      displayName: Authorize salesforce org
    - bash: 
        sfdx force:source:deploy -l RunLocalTests -p ./force-app -u prod -w 10
      displayName: Deploying Extra Metadata to the Org
#https://docs.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml

